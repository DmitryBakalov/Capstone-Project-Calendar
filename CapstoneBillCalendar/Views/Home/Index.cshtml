@model CapstoneBillCalendar.Models.UserModel
@{
    ViewBag.Title = "Index";
}

<h3>Welcome to your Calendar, <b>@Html.DisplayFor(model => model.Username)@ViewData["userName"]!</b></h3><hr>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @*<input type="button" value="Logout" class="btn btn-primary" onclick="/Login/Logout" />*@
            <a class="btn btn-primary" href="/Login/Login" role="button">Logout</a>
        </div>
    </div>


<div id="calendar"></div>

@* Record Details Modal *@
<div class="modal fade" id="detailsModal" tabindex="1" role="dialog" aria-labelledby="detailsModalLabel" aria-hidden="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title"><span id="recordTitle"></span></h4>
            </div>

            <div class="modal-body">
                <button id="btnDelete" class="btn btn-default btn-sm pull-right">
                    <span class="glyphicon glyphicon-remove"></span> Delete
                </button>
                <button id="btnEdit" class="btn btn-default btn-sm pull-right" style="margin-right: 5px;">
                    <span class="glyphicon glyphicon-pencil"></span> Edit
                </button>
                <p id="bodyDetails"></p>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn" style="background-color: dimgrey; color: white" data-dismiss="modal">Close</button>
                @*<button type="button" class="btn" style="background-color: #2B547E; color: white" data-dismiss="modal">Save changes</button>*@
            </div>
        </div>
    </div>
</div>

@* Record Edit/Save Modal *@
<div class="modal fade" id="saveModal" tabindex="1" role="dialog" aria-labelledby="saveModalLabel" aria-hidden="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Save / Edit Record</h4>
            </div>
            <div class="modal-body">
                <form class="col-12">
                    <input type="hidden" id="hiddendRecordID" value="0" />
                    @* Subject Field *@
                    <div class="form-group">
                        <label>Subject</label>
                        <input type="text" id="txtSubject" class="form-control" />
                    </div>
                    @* Due Date Field *@
                    <div class="form-group">
                        <label>Due Date</label>
                        <div class="input-group date" id="dueDateGroup">
                            <input type="text" id="txtDueDate" class="form-control" />
                            <span class="input-group-addon">
                                <i class="fas fa-calendar-alt"></i>
                            </span>
                        </div>
                    </div>
                    @* Checkbox Paid *@
                    <div class="form-group">
                        <div class="checkbox">
                            <label><input type="checkbox" id="chkPaid" checked="checked" />Paid</label>
                        </div>
                    </div>
                    @* Payment Amount Field *@
                    <div class="form-group" id="amountBlock" style="display: none">
                        <label>Payment Amount</label>
                        <input type="text" id="txtAmount" class="form-control" />
                    </div>
                    @* Paid Date Field *@
                    <div class="form-group" id="paidDateBlock" style="display: none">
                        <label>Paid Date</label>
                        <div class="input-group date" id="paidDateGroup">
                            <input type="text" id="txtPaidDate" class="form-control" />
                            <span class="input-group-addon">
                                <i class="fas fa-calendar-alt"></i>
                            </span>
                        </div>
                    </div>
                    @* Description Field *@
                    <div class="form-group">
                        <label>Description</label>
                        <textarea id="txtDescription" rows="3" class="form-control"></textarea>
                    </div>
                    @* Theme Color Field *@
                    <div class="form-group">
                        <label>Theme Color</label>
                        <select id="ddlColor" class="form-control">
                            <option value="red">Default</option>
                            <option value="khaki">Yellow</option>
                            <option value="gunmetal">Gray</option>
                            <option value="indigo">Blue</option>
                            <option value="green">Green</option>
                            <option value="olive">Olive</option>
                            <option value="purple">Purple</option>
                            <option value="orange">Orange</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnSave" class="btn" style="background-color: #2B547E; color: white; border-color: white;" data-dismiss="modal">Save</button>
                <button type="button" class="btn" style="background-color: dimgrey; color: white" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


@* Importing CSS styles for the Calendar *@
<link href="~/Content/fullcalendar.min.css" rel="stylesheet" />
<link href="~/Content/fullcalendar.print.css" rel="stylesheet" media="print" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />

@section Scripts{
    @* Importing JS code for the Calendar*@
    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Scripts/fullcalendar.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>
    <script src="https://kit.fontawesome.com/a878832b3d.js" crossorigin="anonymous"></script>
    @*<script src="~/Scripts/fullcalendar.helper.min.js"></script>*@

    <script>
        // $(document).ready() is used when DOM is ready for JavaScript
        $(document).ready(function () {
            var billsRecords = [];
            var selectedRecord = null;
            let today = new Date().toISOString().slice(0, 10);

            FetchRecordAndRenderCalendar();
            function FetchRecordAndRenderCalendar() {
                billsRecords = []; /*Empty the list before rendering the calendar*/

                $.ajax({
                    // Getting data from database
                    type: "GET",
                    url: "/home/GetEvents",
                    success: function (data) {
                        $.each(data, function (i, v) {
                            var paymentAmount = v.PaidDate ? " $" + v.PaymentAmount : "";
                            var dueColor = v.PaidDate ? v.ThemeColor = v.ThemeColor : v.ThemeColor = "red";
                            dueColor = v.ThemeColor;

                            // Pushing data to the event object
                            billsRecords.push({
                                PaymentId: v.PaymentId,
                                title: v.PayeeName + paymentAmount,
                                amount: paymentAmount,
                                description: v.Description,
                                start: moment(v.DueDate),
                                endStr: moment(v.PaidDate),
                                color: dueColor,
                                paid1: false,
                            });
                            //for (var i in billsRecords) {

                            //    document.write("<br>");

                            //    for (var j in billsRecords[i]) {
                            //        document.write(billsRecords[i][j] + "<br>");
                            //    }
                            //}
                        })
                        GenerateCalendar(billsRecords);
                    },
                    error: function (error) {
                        alert("Das ist unglücklich");
                    }
                })
            }

            function GenerateCalendar(billsRecords) {
                $('#calendar').fullCalendar('destroy'); //Checks and destroys a calendar if it already exists
                $('#calendar').fullCalendar({           // Creates a new calendar view
                    contentHeight: 600,
                    defaultDate: new Date(),
                    header:
                    {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'month,basicWeek,basicDay,agenda'
                    },
                    eventLimit: true,
                    eventColor: '#378006',
                    events: billsRecords,
                    eventClick: function (calEvent, jsEvent, view) {
                        selectedRecord = calEvent;
                        $('#detailsModal #recordTitle').text(calEvent.title);
                        $('#saveModal #recordTitleSaveModal').text(calEvent.title);
                        var $details = $('<div/>');
                        $details.append($('<p/>').html('<b>Due Date: </b>' + calEvent.start.format("DD-MMM-YYYY")));

                        if (isNaN(calEvent.endStr)) {
                            $details.append($('<p/>').html('<b>Paid Date:</b> Has <b>NOT</b> been paid yet.'));
                            $details.append($('<p/>').html('<b>Description: </b>' + calEvent.description));
                            $details.append($('<span/>').html('<i class="fas fa-times fa-4x" style="color:red; margin-left:6px;"></i><h4 style="color:red; margin-left: 7px;"><b>DUE</b></h4>'));
                        }
                        else {
                            $details.append($('<p/>').html('<b>Paid Date: </b>' + calEvent.endStr.format("DD-MMM-YYYY")));
                            $details.append($('<p/>').html('<b>Amount Paid: </b>' + calEvent.amount));
                            $details.append($('<p/>').html('<b>Description: </b>' + calEvent.description));
                            $details.append($('<span/>').html('<i class="fas fa-check fa-4x" style="color:green; margin-left: 2px;"></i><h4 style = "color:green; margin-left: 8px;"><b>PAID<b/></h4 >'));
                        }

                        $('#detailsModal #bodyDetails').empty().html($details);

                        $('#detailsModal').modal();
                    },

                    // Create a function to add new record
                    selectable: true,
                    select: function (start, endStr) {
                        selectedRecord = {
                            paymentID: 0,
                            title: "",
                            amount: 0,
                            description: "",
                            start: start,
                            endStr: endStr,
                            paid1: false,
                            color: ""
                        };
                        openAddEditForm();
                        $('#calendar').fullCalendar('unselect');
                    },

                    editable: true,
                    eventDrop: function (record) {
                        var data = {
                            PaymentId: record.paymentID,
                            PayeeName: record.title,
                            PaymentAmount: record.amount,
                            DueDate: record.start.format('DD-MMM-YYYY'),
                            //PaidDate: $('#chkPaid').is(':checked' ? $('#txtPaidDate').val().trim() : null),
                            PaidDate: record.endStr != isNaN(record.endStr) ? record.endStr.format('DD-MMM-YYYY') : null,
                            Description: record.description,
                            ThemeColor: record.color
                        }
                        SaveRecord(data);
                    }
                });
            }

            /* ------------------------- jQuery CODE BLOCK---------------------------------- */

            // Edit button opens a model where record can be edited
            $('#btnEdit').click(function () {
                openAddEditForm();
            })

            // Delete button removes the record from the calendar and database
            $('#btnDelete').click(function () {
                if (selectedRecord != null && confirm('This record will be deleted permanently. Would you like to preceed?')) {
                    $.ajax({
                        type: "POST",
                        url: '/home/DeleteEvent',
                        data: { 'paymentID': selectedRecord.PaymentId },
                        success: function (data) {
                            if (data.status) {
                                alert("Your record succesfully deleted!");
                                // This function refreshes the calendar
                                FetchRecordAndRenderCalendar();
                                $('#detailsModal').modal('hide');
                            }
                        },
                        error: function () {
                            alert('Error! Please try again.');
                        }

                    })
                }
            })

            $('#dueDateGroup,#paidDateGroup').datetimepicker({
                format: 'DD-MMM-YYYY'
            });

            // Hides a Paid date box if payment has not been made
            $('#chkPaid').change(function () {
                if ($(this).is(':checked')) {
                    $('#paidDateBlock').show();
                    $('#amountBlock').show();
                }
                else {
                    $('#paidDateBlock').hide();
                    $('#amountBlock').hide();
                    $('#txtAmount').val("");
                    $('#txtPaidDate').val("");
                }
            });

            function openAddEditForm() {
                if (selectedRecord != null) {
                    $('#hiddendRecordID').val(selectedRecord.PaymentId);
                    $('#txtSubject').val(selectedRecord.title);
                    $('#txtDueDate').val(selectedRecord.start.format('DD-MMM-YYYY'));
                    $('#txtAmount').val(selectedRecord.amount);
                    $('#chkPaid').prop('checked', selectedRecord.paid1 || false);
                    //$('#chkPaid').change();
                    $('#txtPaidDate').val(isNaN(selectedRecord.endStr) ? '' : selectedRecord.endStr.format('DD-MMM-YYYY'));
                    $('#txtDescription').val(selectedRecord.description);
                    $('#ddlColor').val(selectedRecord.color);
                }
                $('#detailsModal').modal('hide');
                $('#saveModal').modal();
            }

            $('#btnSave').click(function () {

                if ($('#txtSubject').val().trim() == "") {
                    alert('Subject Required');
                    return;
                }

                if ($('#txtDueDate').val().trim() == "") {
                    alert('Due Date Required');
                    return;
                }

                if ($('#chkPaid').is(':checked') == true && $('#txtAmount').val().trim() == "") {
                    alert('Payment Amount Required');
                    return;
                }

                if ($('#chkPaid').is(':checked') == true && $('#txtPaidDate').val().trim() == "") {
                    alert('Paid Date Required');
                    return;
                }
                else {
                    var dueDate = moment($('#txtDueDate').val(), 'DD-MMM-YYYY').toDate();
                    var paidDate = moment($('#txtPaidDate').val(), 'DD-MMM-YYYY').toDate();
                }

                var dataRecord = {
                    PaymentId: $('#hiddendRecordID').val(),
                    PayeeName: $('#txtSubject').val().trim(),
                    PaymentAmount: $('#txtAmount').val(),
                    DueDate: $('#txtDueDate').val(),
                    //PaidDate: $('#chkPaid').is(':checked' ? $('#txtPaidDate').val().trim() : null),
                    PaidDate: $('#txtPaidDate').val(),
                    Description: $('#txtDescription').val(),
                    ThemeColor: $('#ddlColor').val()
                }
                //alert("Informacia " + PaymentId);
                // Call function to submit data to the server
                SaveRecord(dataRecord);
            })

            function SaveRecord(data) {
                $.ajax({
                    type: "POST",
                    url: '/home/SaveEvent',
                    data: data,
                    success: function (data) {
                        if (data.status) {
                            alert("Your record saved!");
                            // This function refreshes the calendar
                            FetchRecordAndRenderCalendar();
                            $('#saveModal').modal('hide');
                        }
                    },
                    error: function () {
                        alert('Error! Please try again.');
                    }
                })
            }
        });

    </script>
} 